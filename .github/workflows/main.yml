name: 'App Test With Inputs'

env:
  SCHEME: 'MySCHEME'
  CONFIGURATION: 'Release'
  DESTINATION: '"platform=iOS Simulator,name=iPhone 15"'
  ORG_NAME: 'RICO CORPORATION'

on:
  push
    # outputs:
    #   PROJECT_NAME:
    #     value: ${{ jobs.set-vars.outputs.PROJECT_NAME }}

  
jobs:
  set-variables:
    runs-on: macos-latest
   
    # outputs:
    #     SCHEME: ${{ steps.export.outputs.SCHEME }}
    #     CONFIGURATION: ${{ steps.export.outputs.CONFIGURATION }}
    #     DESTINATION: ${{ steps.export.outputs.DESTINATION }}

    steps:
      - name: test
        run: |
          echo "--------------------------------------------------------"
          export APP_NAME=$(yq e .app.name .pipeline.yaml)
          export VERSION=$(yq e .app.version .pipeline.yaml)
          echo "--------------------------------------------------------"
          echo "NOME DA APLICACAO: $APP_NAME"
          echo "VERSAO: $VERSION"

      # - name: Setup Variables
      #   id: export
      #   run: |
      #     echo "SCHEME: ${{ env.SCHEME }}" >> variables.yaml
      #     echo "CONFIGURATION: ${{ env.CONFIGURATION }}" >> variables.yaml
      #     echo "DESTINATION: ${{ env.DESTINATION }}" >> variables.yaml
      #     cat variables.yaml

      #     # echo "SCHEME=${{ env.SCHEME }}" >> $GITHUB_OUTPUT
      #     # echo "CONFIGURATION=${{ env.CONFIGURATION }}" >> $GITHUB_OUTPUT
      #     # echo "DESTINATION=${{ env.DESTINATION }}" >> $GITHUB_OUTPUT
      
      # - name: Upload Variables
      #   uses: actions/upload-artifact@v4
      #   with:
      #     name: shared-variables
      #     path: variables.yaml

  # build-ios:
  #   needs: set-variables
  #   uses: ./.github/workflows/build-stage.yml
  #   # with:
  #   #   SCHEME: ${{ needs.set-variables.outputs.SCHEME }}
  #   #   CONFIGURATION: ${{ needs.set-variables.outputs.CONFIGURATION }}
  #   #   DESTINATION: ${{ needs.set-variables.outputs.DESTINATION }}

  #   secrets: inherit

  # unit-tests:
  #   needs: build-ios
  #   uses: ./.github/workflows/unit-tests.yml
    # with:
    #   SCHEME: ${{ needs.set-variables.outputs.SCHEME }}
  # deploy-ios:
  #   uses: ./.github/workflows/deploy-ios.yml


  # check-info:
  #   runs-on: macos-latest
  #   steps:
  #     - name: Checkout Code
  #       uses: actions/checkout@v4

  #     - name: Get info from project
  #       run: |

  #         echo "--------------------------------------------------------"
  #         ls -R
  #         pwd
  #         echo "--------------------------------------------------------"
  #         export APP_NAME=$(yq e .app.name .pipeline.yaml)
  #         export VERSION=$(yq e .app.version .pipeline.yaml)
  #         echo "--------------------------------------------------------"
  #         echo "NOME DA APLICACAO: $APP_NAME"
  #         echo "VERSAO: $VERSION"
          
  #         echo "O seguinte artefato serÃ¡ publicado ----> REPOSITORY/$APP_NAME:$VERSION"

          # # Get info
          # export APP_NAME=$(yq -e app.name pipeline.yaml)
          # export VERSION=$(yq -e app.version pipeline.yaml)
          # echo "--------------------------------------------------------"
          # # Display vars
          # echo $APP_NAME
          # echo $VERSION



  # init-test:
  #   needs: check-info
  #   runs-on: macos-latest
  #   steps:
  #     - name: SET VARS
  #       run: |
          
  #         echo "ORG_NAME =====> ${{ env.ORG_NAME }}"
  #         echo "ORG_NAME=${{ env.ORG_NAME }}" >> $GITHUB_ENV
  #         echo "--------------------------------------------------"
          
  # second:
  #   needs: init-test
  #   runs-on: macos-latest
  #   steps:
  #     - name: DISPLAY VARS
  #       run: |
  #         echo "ORG_NAME=====> $ORG_NAME"

  # thyrd:
  #   needs: second
  #   runs-on: macos-latest
    
  #   outputs:
  #     ORG_NAME_2: ${{ steps.set-vars2.outputs.ORG_NAME_2 }}
      
  #   steps:
  #     - name: set-vars2
  #       id: set-vars2
  #       run: |
  #         echo "ORG_NAME_2= ${{ env.ORG_NAME }}" >> $GITHUB_OUTPUT
  
  # prerequisities:
  #   needs: thyrd
  #   uses: ./.github/workflows/prerequisites.yml
  #   with:
  #     ORG_NAME: ${{ needs.thyrd.outputs.ORG_NAME_2 }}

  # #-------------------------
  # # Set outputs deploy
  # #-------------------------
  # pre_deploy:
  #   needs: prerequisities
  #   runs-on: macos-latest
  #   outputs:
  #     ORG_NAME: ${{ steps.pre-deploy.outputs.ORG_NAME }}

  #   steps:
  #     - name: SET VARS PRE DEPLOY
  #       id: pre-deploy
  #       run: |
  #         echo "ORG_NAME=${{ env.ORG_NAME }}" >> $GITHUB_OUTPUT
  #         echo "---------------------------------------------------------"
  #         echo "$REPOSITORY_VAR"

  # deploy:
  #   needs: pre_deploy
  #   uses: ./.github/workflows/deploy.yml
  #   with:
  #     ORG_NAME: ${{ needs.pre_deploy.outputs.ORG_NAME }}

  # set-vars:
  #   runs-on: macos-latest

  #   outputs:
  #     APP_NAME: ${{ steps.set-variables.outputs.APP_NAME }}
  #     AUTOR: ${{ steps.set-variables.outputs.AUTOR }}
  #     DATE: ${{ steps.set-variables.outputs.DATE }}
  #     ORG_NAME: ${{ steps.set-variables.outputs.ORG_NAME }}
    #   ORG_NAME: ${{ steps.set-variables.outputs.ORG_NAME }}
    #   PROJECT_NAME: ${{ steps.set-variables.outputs.PROJECT_NAME }}

    # steps:
    # - name: Checkout Code
    #   uses: actions/checkout@v4
    
    # - name: DISPLAY VARS 1 SAME JOB YAML
    #   run: |

    #     echo "------------- c/ env.VARS ----------------"
    #     echo "APP_NAME=${{ env.APP_NAME }}"
    #     echo "AUTOR=${{ env.AUTOR }}"
    #     echo "DATE=${{ env.DATE }}"
    #     echo "ORG_NAME=${{ env.ORG_NAME }}"

    #     export ORG_NAME="${{ env.ORG_NAME }}"

    #     echo "-------------------- output export -----------------------------"
    #     echo "$ORG_NAME"

    # - name: set variables
    #   id: set-variables
    #   run: |
    #     echo "APP_NAME=${{ env.APP_NAME }}" >> "$GITHUB_OUTPUT"
    #     echo "AUTOR=${{ env.AUTOR }}" >> "$GITHUB_OUTPUT"
    #     echo "DATE=${{ env.DATE }}" >> "$GITHUB_OUTPUT"
    #     echo "ORG_NAME=${{ env.ORG_NAME }}" >> "$GITHUB_OUTPUT"




  # job_02:
  #   needs: set-vars
  #   runs-on: macos-latest
  #   steps:
  #     - name: DISPLAY VARS JOB 2
  #       run: |
  #         echo "----------------------------------------------"
  #         echo "1.-----> ${{ env.APP_NAME }}"
  #         echo "2.-----> ${{ vars.APP_NAME }}"
  #         echo "3.-----> $ORG_NAME"
  #         echo "----------------------------------------------"
  
  # job_03:
  #   needs: job_02
  #   runs-on: macos-latest
  #   steps:
  #     - name: DISPLAY VARS
  #       run: |
  #         echo "1.-----> ${{ env.APP_NAME }}"
  #         echo "2.-----> ${{ vars.APP_NAME }}"
  #         echo "3.-----> $ORG_NAME"


  #     - name: Run tests
  #       run: |
  #         mkdir -p archive
  #         echo "Realizando testes \b Data: 19/05/2025" > archive/testes.txt
      
  #     - name: Upload Artifacts
  #       uses: actions/upload-artifact@v4
  #       with:
  #         name: artifacts
  #         path: ./archive

  #     - name: Test pos Uploads
  #       run: |
  #         ls -R

  # job_04:
  #   needs: job_03
  #   runs-on: macos-latest
  #   steps:
  #     - name: DISPLAY VARS
  #       run: |
  #        echo "1.-----> ${{ env.APP_NAME }}"
  #        echo "2.-----> ${{ vars.APP_NAME }}"
  #        echo "ORG_NAME: ${{ env.ORG_NAME}}"
  #        echo "3.-----> $ORG_NAME"

  #     - name: Downloads Artifacts
  #       uses: actions/download-artifact@v4
  #       with:
  #         name: artifacts
  #         path: ./archive
        
  #     - name: Test downloaded artifacts
  #       run: |
  #         pwd
  #         echo "----------------------------------------------"
  #         ls -lha
  #         echo "----------------------------------------------"
  #         ls -R
  #         echo "--------------------- FINISH -------------------------"
 
  #     - name: Final test
  #       run: |
  #         cat ./archive/testes.txt


  
  # call-prerequisites:
  #   needs: set-vars
  #   uses: ./.github/workflows/prerequisites.yml
  #   with:
  #     APP_NAME: ${{ needs.set-vars.outputs.APP_NAME }}
  #     AUTOR: ${{ needs.set-vars.outputs.AUTOR }}
  #     DATE: ${{ needs.set-vars.outputs.DATE }}

  # deploy:
  #   needs: set-vars
  #   uses: ./.github/workflows/deploy.yml
  #   with:
  #     APP_NAME: ${{ needs.set-vars.outputs.APP_NAME }}
  #     AUTOR: ${{ needs.set-vars.outputs.AUTOR }}
  #     DATE: ${{ needs.set-vars.outputs.DATE }}
  #     ORG_NAME: ${{ needs.set-vars.outputs.ORG_NAME }}

  # secondary:
  #   runs-on: macos-latest
  #   needs: set-vars
  #   steps:
  #     - name: secondary job
  #       run: |
  #         echo "ORG_NAME: ${{ needs.set-vars.outputs.ORG_NAME }}"
  #         echo "PROJECT: ${{ needs.set-vars.outputs.PROJECT_NAME }}"

  # inspect:
  #   runs-on: macos-latest
  #   needs: secondary
  #   steps:
  #     - name: Run Sonar Scanner
  #       run: |
  #         echo "## Running Sonar Scanner..."
  #         echo ""
  #         echo ""
  #         echo "ORG_NAME: ${{ needs.set-vars.outputs.ORG_NAME }}"
  #         echo "PROJECT: ${{ needs.set-vars.outputs.PROJECT_NAME }}"
  # job_02:
  #   needs: set-vars
  #   runs-on: macos-latest
  #   steps:
  #     - name: Display Variables
  #       run: |
  #         echo "----- Variables: --------"
  #         echo "NOME DO APP: $APP_NAME"
  #         echo "AUTOR: $AUTOR"
  #         echo "DATA: $DATE"

  #       env:
  #         APP_NAME: ${{ needs.set-vars.outputs.APP_NAME }}
  #         AUTOR: ${{ needs.set-vars.outputs.AUTOR }}
  #         DATE: ${{ needs.set-vars.outputs.DATE }}
