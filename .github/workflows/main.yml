name: 'App Test With Inputs'

env:
  APP_NAME: 'MY APP TEST IOS'
  AUTOR: 'STEVE JOBS'
  DATE: '22/04/2025'

on:
  push
    # outputs:
    #   PROJECT_NAME:
    #     value: ${{ jobs.set-vars.outputs.PROJECT_NAME }}

  
jobs:
  init:
    runs-on: macos-latest

    outputs:
      APP_NAME: ${{ steps.set-variables.outputs.APP_NAME }}
      AUTOR: ${{ steps.set-variables.outputs.AUTOR }}
      DATE: ${{ steps.set-variables.outputs.DATE }}
    #   ORG_NAME: ${{ steps.set-variables.outputs.ORG_NAME }}
    #   PROJECT_NAME: ${{ steps.set-variables.outputs.PROJECT_NAME }}

    steps:
    - name: Checkout Code
      uses: actions/checkout@v4
    
    - name: DISPLAY VARS 1
      run: |
        echo "APP_NAME=${{ env.APP_NAME }}"
        echo "AUTOR=${{ env.AUTOR }}"
        echo "DATE=${{ env.DATE }}"

    - name: set variables
      id: set-variables
      run: |
        echo "APP_NAME=${{ env.APP_NAME }}" >> "$GITHUB_OUTPUT"
        echo "AUTOR=${{ env.AUTOR }}" >> "$GITHUB_OUTPUT"
        echo "DATE=${{ env.DATE }}" >> "$GITHUB_OUTPUT"
    #     echo "-------------------------------------------------"
    #     # echo ${{ env.APP_NAME }}
    #     # echo ${{ env.AUTOR }}
    #     # echo ${{ env.DATE }}

    #     echo "REPOSITORY > $GITHUB_REPOSITORY"
    #     echo "ORG_NAME=$(echo $GITHUB_REPOSITORY | cut -f1 -d"/")" >> $GITHUB_OUTPUT
    #     echo "PROJECT_NAME=$(echo $GITHUB_REPOSITORY | cut -f2 -d"/")" >> $GITHUB_OUTPUT
    #     echo "----------------- output ---------------------"
    #     echo "ORG_NAME: $ORG_NAME"
    #     echo "PROJECT_NAME: $PROJECT_NAME"
    #     echo "Start by: $GITHUB_ACTOR"
      
    # - name: Load YAML Variables
    #   uses: doughepi/yaml-env-action@v1.0.0
    #   with:
    #     files: ./env1.yml

    # - name: Output YAML Variables
    #   id: xpto
    #   run: |
    #     echo "PROJECT_ID: ${{ env.PROJECT_ID }}"
    #     echo "AMBIENT: ${{ env.AMBIENT }}"
    #     echo "LOCAL: ${{ env.LOCAL }}"
    #     echo "ORG: ${{ env.ORG }}"

  job_02:
    needs: init
    runs-on: macos-latest
    steps:
      - name: DISPLAY VARS JOB 2
        run: |
          echo "----------------------------------------------"
          echo "APP_NAME ---------------> ${{ env.APP_NAME }}"
          echo "----------------------------------------------"
    
  call-prerequisites:
    needs: init
    uses: ./.github/workflows/prerequisites.yml
    with:
      APP_NAME: ${{ needs.init.outputs.APP_NAME }}
      AUTOR: ${{ needs.init.outputs.AUTOR }}
      DATE: ${{ needs.init.outputs.DATE }}

      # APP_NAME: ${{ vars.APP_NAME }}
      # AUTOR: ${{ vars.AUTOR }}
      # DATE: ${{ vars.DATE }}
      # ORG_NAME: ${{ vars.ORG_NAME }}
      # PROJECT_NAME: ${{ vars.PROJECT_NAME }}

  # secondary:
  #   runs-on: macos-latest
  #   needs: set-vars
  #   steps:
  #     - name: secondary job
  #       run: |
  #         echo "ORG_NAME: ${{ needs.set-vars.outputs.ORG_NAME }}"
  #         echo "PROJECT: ${{ needs.set-vars.outputs.PROJECT_NAME }}"

  # inspect:
  #   runs-on: macos-latest
  #   needs: secondary
  #   steps:
  #     - name: Run Sonar Scanner
  #       run: |
  #         echo "## Running Sonar Scanner..."
  #         echo ""
  #         echo ""
  #         echo "ORG_NAME: ${{ needs.set-vars.outputs.ORG_NAME }}"
  #         echo "PROJECT: ${{ needs.set-vars.outputs.PROJECT_NAME }}"
  # job_02:
  #   needs: set-vars
  #   runs-on: macos-latest
  #   steps:
  #     - name: Display Variables
  #       run: |
  #         echo "----- Variables: --------"
  #         echo "NOME DO APP: $APP_NAME"
  #         echo "AUTOR: $AUTOR"
  #         echo "DATA: $DATE"

  #       env:
  #         APP_NAME: ${{ needs.set-vars.outputs.APP_NAME }}
  #         AUTOR: ${{ needs.set-vars.outputs.AUTOR }}
  #         DATE: ${{ needs.set-vars.outputs.DATE }}
